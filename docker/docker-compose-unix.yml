version: '3.1'

services:
  mongo:
    image: mongo:3.6
    environment:
      MONGO_INITDB_ROOT_USERNAME: abekalarz
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/db_password
      MONGO_INITDB_DATABASE: arqonia2
      MONGO_ARQONIA_USERNAME: arqoniaMongoUser
    volumes:
      - ../database_store/mongo:/data/dbdocker
      - ./mongo-import/mongo-setup/create_user.sh:/docker-entrypoint-initdb.d/create_user.sh
    ports:
      - 27017:27017
    networks: 
      - spring-boot-network
    restart: on-failure
    healthcheck:
      test: ["CMD", "pgrep", "mongod"]
      interval: 5s
      timeout: 5s
      retries: 5
    secrets:
      - db_password

  mongo_import:
    image: mongo:3.6
    links:
      - mongo
    networks:
      - spring-boot-network
    volumes:
      - ./mongo-import:/mongo-import
    command:
      chmod +x /mongo-import/import.sh
    command:
      /mongo-import/import.sh
    restart: on-failure
    depends_on:
      - mongo

  arqonia_build_and_run:
    image: arqonia_build_and_run
    build: .
    ports:
      - 8443:8443
    networks:
      - spring-boot-network
    depends_on:
      - mongo
      - mongo_import
    restart: on-failure

networks:
  spring-boot-network:
    driver: bridge

secrets:
  db_password:
    file: ../src/main/resources/passwords/docker/secrets/db_password.txt
#    file: ./secrets/db_password.txt

#    When for example we have 'ports':
#    ports:
#      - 8081:8080
#    then '8081' is the host port and '8080' is the service port ('host port:service port')
